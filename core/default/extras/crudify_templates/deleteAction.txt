$request = new RivetyCore_Request($this->getRequest());
if ($request->has('ENTITY_NAME_ID_COLUMN_NAME') && !empty($request->ENTITY_NAME_ID_COLUMN_NAME))
{
	$ENTITY_NAME_dbtable = new MODEL_CLASS_NAME();
	$ENTITY_NAME = $ENTITY_NAME_dbtable->fetchRow($ENTITY_NAME_dbtable->getAdapter()->quoteInto('ID_COLUMN_NAME = ?', $request->ENTITY_NAME_ID_COLUMN_NAME));
	if (!empty($ENTITY_NAME))
	{
		// this would be a great place to confirm that the current user is allowed to delete this record

		if ($this->getRequest()->isPost() && $request->has('delete') && $request->delete == 'Yes')
		{
			$ENTITY_NAME->delete();
			$this->screenAlertQueued('success', 'The ENTITY_NICENAME_LOWERCASE was successfully deleted.', date(DB_DATETIME_FORMAT, time() + 30), 'INDEX_MCA');
			$this->_redirect('INDEX_URL');
		}
		$this->view->ENTITY_NAME = $ENTITY_NAME->toArray();
	}
	else
	{
		$this->screenAlert('error', 'A(n) ENTITY_NICENAME_LOWERCASE with the provided ID could not be found.');
	}
}
else
{
	$this->screenAlert('error', 'ENTITY_NICENAME ID_COLUMN_NAME is a required URL parameter.');
}